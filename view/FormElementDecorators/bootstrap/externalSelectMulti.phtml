<?php
/**
 * Created by PhpStorm.
 * User: kota
 * Date: 04.03.17
 * Time: 0:37
 */

/**
 * формируем данные для рендеринга элемента через tokenfield плагин
 * @param \Zend\Form\Element $element
 * @return array
 */

/** @var \Zend\Form\Element $element */
$element = $this->get('formElement');
$gridClasses = $element->getOption('gridClasses');

// Формирование размеров по сетке
$labelClass = (!empty($gridClasses['label_class'])) ? $gridClasses['label_class'] : 'col-sm-3';
$bodyClass = (!empty($gridClasses['body_class'])) ? $gridClasses['body_class'] : 'col-sm-9';


$prepareElementData = function ($element) {
    $value = $element->getValue();
    $valueList = [];
    $tokenFieldData = [];
    if (($separator = $element->getOption('separator')) == null) {
        $separator = '@@';
    }
    if (is_array($value)) {
        foreach ($value as $item) {
            $valueList[] = json_encode($item);
            $tokenFieldData[] = $item;
        }
        $element->setValue(implode($separator, $valueList));
    } elseif ($value != '') {
        $valueArr = explode($separator, $value);
        foreach ($valueArr as $valueItem) {
            $tokenFieldData[] = json_decode($valueItem);
        }
    }

    $element->setAttribute('data-tokens', json_encode($tokenFieldData));
    $element->setAttribute('data-need-tokenfield', true);
    $element->setAttribute('data-separator', $separator);
    $element->setAttribute('class', $element->getAttribute('class') . ' ext-select-multi form-control');
};

$options = $this->get('options');
if (array_key_exists('branch', $options)) {
    $branch = $options['branch'];
} else {
    $branch = $this->get('branch');
}
$mode = $this->get('mode');
$id = $element->getAttribute('id');
$errorMsg = $errClass = '';
if (isset($options['markupError'])) {
    $errorMsg = $options['markupError'];
    $errClass = ' input-error-element';
}

$labelAttributes = $element->getLabelAttributes();
$labelAttributes['class'] = $labelClass . ' control-label ' . ((array_key_exists('class', $labelAttributes)) ? $labelAttributes['class'] : '');
$element->setLabelAttributes($labelAttributes);
$label = ($element->getLabel()) ? $this->formLabel($element) : '';

if (($currentMode = $element->getOption('mode')) == null) {
    $currentMode = $mode;
}

$name = $element->getName();
$value = $element->getValue();
$prepareElementData($element);

echo '<div class="form-group element-wrapper element-wrapper-ext-select-multi">';
if ($currentMode == 'view') {
    $text = '';
    $count = 1;
    if (is_array($value)) {
        foreach ($value as $val) {
            $text .= $val['label'];
            if ($count < count($value)) {
                $text .= ', ';
            }
            $count++;
        }
    } elseif (is_string($value)) {
        $value = explode('@@', $value);
        $newValue = [];
        foreach ($value as $val) {
            $newValue[] = json_decode($val, true);
        }
        foreach ($newValue as $val) {
            $text .= $val['label'];
            if ($count < count($value)) {
                $text .= ', ';
            }
            $count++;
        }
    }
    echo $label . '<div class="' . $bodyClass . ' wrap-element-body"><span class="form-control">' . $text . '</span></div>';
} else {
    $iconClass = 'glyphicon glyphicon-search';
    if (($optIconClass = $element->getOption('icon-class')) != null) {
        $iconClass = $optIconClass;
    }

    if (($clickHandler = $element->getOption('clickHandler')) == null) {
        $clickHandler = '';
    }

    $markup = sprintf(
        '<div id="ext-select-multi-%s" class="%s">' .
        '<div class="input-group">%s' .
        '<span class="input-group-addon ext-select-search"  data-clickHandler="%s"><span class="cursor-pointer %s"></span></span>' .
        '</div></div>%s',
        $id,
        $errClass,
        $this->formText($element),
        $clickHandler,
        $iconClass,
        $errorMsg
    );
    echo $label . '<div class="' . $bodyClass . ' wrap-element-body">' . $markup . '</div>';
}
echo '</div>';
